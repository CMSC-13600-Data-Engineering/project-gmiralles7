Code - Models
from django.db import models
from django.contrib.auth.models import User

class Course(models.Model):
    course_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    instructor = models.ForeignKey(User, on_delete=models.CASCADE, related_name='courses_taught')

class Lecture(models.Model):
    lecture_id = models.AutoField(primary_key=True)
    course = models.ForeignKey(Course, on_delete=models.CASCADE, related_name='lectures')
    date = models.DateField()
    qr_code = models.CharField(max_length=255, unique=True)

class QRCode(models.Model):
    qr_code_id = models.AutoField(primary_key=True)
    lecture = models.ForeignKey(Lecture, on_delete=models.CASCADE, related_name='qr_codes')
    student = models.ForeignKey(User, on_delete=models.CASCADE, related_name='qr_codes_uploaded')
    timestamp = models.DateTimeField(auto_now_add=True)

Analysis – Limitations
Questions
How does your data model differ from the one generated by chat-gpt? Why is yours better (on any axis: simpler, more complete, easier to implement, etc.)?
The model suggested by chat-GPT is solid and accomplishes most of this task’s goals. The main difference between the chat-GPT data model and ours is the more direct (and we would argue effectively) way we record attendance, having an entire table just for it. Moreover, the code proposed by chat-GPT does not address the enrollment logic, which only allows students to enroll in a class. Our model is definitely better at measuring/keeping track of attendance and at creating more logically coherent relationships between models/tables.
